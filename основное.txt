ES6
let - создается тогда, когда код до нее дохоходит, видна в блоке кода которое ограничено фигурными скобками;
var - видна всегда, т.е. код ее видит еще до инициализации (undefaind);


===============типы данных=====================
1.числа (Nan, Infinity)
2.строки ('hello')
3.логический (trye, false)
4. null (ссылка на несуществ. вещь, объект не существует)
5. undefaind (объект не существует но значения не имеет)
6. объект (комплексный тип данных, в котором могут содержаться разные типы данных) var obj={ name:"john", age:25}
7.символ

=============общение с пользователем============
alert
confirm
prompt


==============операторы=====================
'use strict' строгий режим (стандарт ES6) 
= присваивание
== равенство по значениям
=== строгое равенство по типам данных
! отрицание



============ условия ====================
let num = 50
switch(num){
    case num<49:
        console.log('неверно');
        break;
    case 50:  //выполнится этот кейс
        console.log('верно');
        break;
    defalt:     // выполнится если ни один из кейсов не подходит
        console.log('error')
        break;
}
break необходим для того чтобы отгородить одно условие от другого 

================== ЦИКЛЫ =====================

while(){} выполняет цикл до тех пор пока условие в скобках верно 
do{} while(); сначала выполняет вействие, затем проверяет условие
for(let i=1; i<8; i++){
    if (i==4){
        continue;   //пропустит итерацию
    }
    if (i==6){
        break;      //прервет цикл
    }    
}

============== функции ======================
если объявить переменную в функции (локально), то и видна она будет только внутри нее, 
если переменная объявлена вне функции (глобально), и над ней происходят монипуляции в теле функции, 
изменения будут видны и вне функции
ЗАМЫКАНИЕ ФУНКЦИИ - если внутри функции есть обращение к переменной, функция ищет эту переменную внутри себя,
                    если не находит ее поиск происходит в глобальной области;

=== методы 
    синтоксис name.method() производит манипуляции
        методы для чисел Math.round(name); parseInt(name); parseFloat(name);
=== свойства 
    синтоксис name.svNasd не производит манипуляций

===ES6
стрелочная функция (пример) let calc = (a,b) => {a+b}




==============gitHub=====================
git init инициализация гита в папке проекта
git config --local user.name
git config --global user.email
git status узнать статус репозитория
git add -A все файлы добавляются в репозиторий
git add nameFile добовить отдельный файл
git log просмотреть какие были коммиты
git clone клонировать репозиторий
git pull скачать последнюю версию проекта

